name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: [1.21.x]
        include:
          - os: ubuntu-latest
            compiler: gcc
          - os: ubuntu-latest
            compiler: clang
          - os: windows-latest
            compiler: msvc
          - os: macos-latest
            compiler: clang

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Format Check
      run: |
        check_format() {
            unformatted=$(go fmt ./...)
            if [ -n "$unformatted" ]; then
            echo "The following files are not formatted in $1:"
            echo "$unformatted"
            return 1
            fi
            echo "Code is formatted in $1."
            return 0
        }
        
        cd compiler && check_format "compiler"

    - name: Run tests
      env:
        GOOS: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
        COMPILER: ${{ matrix.compiler }}
      run: go test -v ./...

    - name: Build
      run: go build -v ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m 